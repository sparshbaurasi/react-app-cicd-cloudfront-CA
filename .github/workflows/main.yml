name: Frontend to cloudfront
on: 
  workflow_dispatch:
   inputs:
    BUCKET_NAME:
      type: string
      required: true
      default: s3-composite-file-upload-action
jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: FE-to-CF
    steps:
    - name: Checkout 
      uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v2
    - name: Npm commands
      uses: sparshbaurasi/react-app-cicd-cloudfront-CA/npmRun_build@main
    - name: Configure AWS Creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: S3 file upload
      uses: sparshbaurasi/react-app-cicd-cloudfront-CA/s3-upload-file@main
      with: 
           Bucket_Name: ${{ github.event.inputs.BUCKET_NAME }}
    - name: Cloudfront invalidate
      uses: sparshbaurasi/react-app-cicd-cloudfront-CA/CloudFront_Invalidation@main
      with:
           DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}

    # - name: SemVersion
    #   id: semversion
    #   uses: bcg-ep-smp/gha-semantic-version/@master
    #   with:
    #     # The prefix to use to identify tags
    #     tag_prefix: ""
    #     # A string which, if present in a git commit, indicates that a change represents a
    #     # major (breaking) change, supports regular expressions wrapped with '/'
    #     major_pattern: "(MAJOR)"
    #     # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
    #     minor_pattern: "(MINOR)"
    #     # A string to determine the format of the version output
    #     version_format: "${major}.${minor}.${patch}-prerelease${increment}"
    #     # Optional path to check for changes. If any changes are detected in the path the
    #     # 'changed' output will true. Enter multiple paths separated by spaces.
    #     #        change_path: "src/my-service"
    #     # Named version, will be used as suffix for name version tag
    #     #        namespace: my-service
    #     # If this is set to true, *every* commit will be treated as a new version.
    #     bump_each_commit: false
    #     # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
    #     #        search_commit_body: false
    #     # The output method used to generate list of users, 'csv' or 'json'.
    #     #        user_format_type: "csv"
    # - name: Output Semversion
    #   run: |
    #     echo "${{ steps.semversion.outputs.version }}"
